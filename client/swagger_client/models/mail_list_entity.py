# coding: utf-8

"""
    BPQ API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class MailListEntity(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        '_date': 'MonthAndDay',
        'type': 'str',
        'state': 'str',
        'to': 'str',
        'at': 'str',
        '_from': 'str',
        'subject': 'str',
        'length': 'int'
    }

    attribute_map = {
        'id': 'id',
        '_date': 'date',
        'type': 'type',
        'state': 'state',
        'to': 'to',
        'at': 'at',
        '_from': 'from',
        'subject': 'subject',
        'length': 'length'
    }

    def __init__(self, id=None, _date=None, type=None, state=None, to=None, at=None, _from=None, subject=None, length=None):  # noqa: E501
        """MailListEntity - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self.__date = None
        self._type = None
        self._state = None
        self._to = None
        self._at = None
        self.__from = None
        self._subject = None
        self._length = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if _date is not None:
            self._date = _date
        if type is not None:
            self.type = type
        if state is not None:
            self.state = state
        if to is not None:
            self.to = to
        if at is not None:
            self.at = at
        if _from is not None:
            self._from = _from
        if subject is not None:
            self.subject = subject
        if length is not None:
            self.length = length

    @property
    def id(self):
        """Gets the id of this MailListEntity.  # noqa: E501


        :return: The id of this MailListEntity.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MailListEntity.


        :param id: The id of this MailListEntity.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def _date(self):
        """Gets the _date of this MailListEntity.  # noqa: E501


        :return: The _date of this MailListEntity.  # noqa: E501
        :rtype: MonthAndDay
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this MailListEntity.


        :param _date: The _date of this MailListEntity.  # noqa: E501
        :type: MonthAndDay
        """

        self.__date = _date

    @property
    def type(self):
        """Gets the type of this MailListEntity.  # noqa: E501


        :return: The type of this MailListEntity.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MailListEntity.


        :param type: The type of this MailListEntity.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def state(self):
        """Gets the state of this MailListEntity.  # noqa: E501


        :return: The state of this MailListEntity.  # noqa: E501
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this MailListEntity.


        :param state: The state of this MailListEntity.  # noqa: E501
        :type: str
        """

        self._state = state

    @property
    def to(self):
        """Gets the to of this MailListEntity.  # noqa: E501


        :return: The to of this MailListEntity.  # noqa: E501
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this MailListEntity.


        :param to: The to of this MailListEntity.  # noqa: E501
        :type: str
        """

        self._to = to

    @property
    def at(self):
        """Gets the at of this MailListEntity.  # noqa: E501


        :return: The at of this MailListEntity.  # noqa: E501
        :rtype: str
        """
        return self._at

    @at.setter
    def at(self, at):
        """Sets the at of this MailListEntity.


        :param at: The at of this MailListEntity.  # noqa: E501
        :type: str
        """

        self._at = at

    @property
    def _from(self):
        """Gets the _from of this MailListEntity.  # noqa: E501


        :return: The _from of this MailListEntity.  # noqa: E501
        :rtype: str
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this MailListEntity.


        :param _from: The _from of this MailListEntity.  # noqa: E501
        :type: str
        """

        self.__from = _from

    @property
    def subject(self):
        """Gets the subject of this MailListEntity.  # noqa: E501


        :return: The subject of this MailListEntity.  # noqa: E501
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this MailListEntity.


        :param subject: The subject of this MailListEntity.  # noqa: E501
        :type: str
        """

        self._subject = subject

    @property
    def length(self):
        """Gets the length of this MailListEntity.  # noqa: E501


        :return: The length of this MailListEntity.  # noqa: E501
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this MailListEntity.


        :param length: The length of this MailListEntity.  # noqa: E501
        :type: int
        """

        self._length = length

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MailListEntity, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MailListEntity):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
