# coding: utf-8

"""
    BPQ API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ForwardingOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'max_size_to_send': 'int',
        'max_size_to_receive': 'int',
        'max_age_for_bulls': 'TimeSpan',
        'warn_if_no_route_for_por_t': 'bool',
        'use_local_time': 'bool',
        'send_p_messages_to_more_than_one_bbs': 'bool',
        'use4_char_continent_codes': 'bool',
        'aliases': 'list[str]'
    }

    attribute_map = {
        'max_size_to_send': 'maxSizeToSend',
        'max_size_to_receive': 'maxSizeToReceive',
        'max_age_for_bulls': 'maxAgeForBulls',
        'warn_if_no_route_for_por_t': 'warnIfNoRouteForPOrT',
        'use_local_time': 'useLocalTime',
        'send_p_messages_to_more_than_one_bbs': 'sendPMessagesToMoreThanOneBbs',
        'use4_char_continent_codes': 'use4CharContinentCodes',
        'aliases': 'aliases'
    }

    def __init__(self, max_size_to_send=None, max_size_to_receive=None, max_age_for_bulls=None, warn_if_no_route_for_por_t=None, use_local_time=None, send_p_messages_to_more_than_one_bbs=None, use4_char_continent_codes=None, aliases=None):  # noqa: E501
        """ForwardingOptions - a model defined in Swagger"""  # noqa: E501
        self._max_size_to_send = None
        self._max_size_to_receive = None
        self._max_age_for_bulls = None
        self._warn_if_no_route_for_por_t = None
        self._use_local_time = None
        self._send_p_messages_to_more_than_one_bbs = None
        self._use4_char_continent_codes = None
        self._aliases = None
        self.discriminator = None
        if max_size_to_send is not None:
            self.max_size_to_send = max_size_to_send
        if max_size_to_receive is not None:
            self.max_size_to_receive = max_size_to_receive
        if max_age_for_bulls is not None:
            self.max_age_for_bulls = max_age_for_bulls
        if warn_if_no_route_for_por_t is not None:
            self.warn_if_no_route_for_por_t = warn_if_no_route_for_por_t
        if use_local_time is not None:
            self.use_local_time = use_local_time
        if send_p_messages_to_more_than_one_bbs is not None:
            self.send_p_messages_to_more_than_one_bbs = send_p_messages_to_more_than_one_bbs
        if use4_char_continent_codes is not None:
            self.use4_char_continent_codes = use4_char_continent_codes
        if aliases is not None:
            self.aliases = aliases

    @property
    def max_size_to_send(self):
        """Gets the max_size_to_send of this ForwardingOptions.  # noqa: E501


        :return: The max_size_to_send of this ForwardingOptions.  # noqa: E501
        :rtype: int
        """
        return self._max_size_to_send

    @max_size_to_send.setter
    def max_size_to_send(self, max_size_to_send):
        """Sets the max_size_to_send of this ForwardingOptions.


        :param max_size_to_send: The max_size_to_send of this ForwardingOptions.  # noqa: E501
        :type: int
        """

        self._max_size_to_send = max_size_to_send

    @property
    def max_size_to_receive(self):
        """Gets the max_size_to_receive of this ForwardingOptions.  # noqa: E501


        :return: The max_size_to_receive of this ForwardingOptions.  # noqa: E501
        :rtype: int
        """
        return self._max_size_to_receive

    @max_size_to_receive.setter
    def max_size_to_receive(self, max_size_to_receive):
        """Sets the max_size_to_receive of this ForwardingOptions.


        :param max_size_to_receive: The max_size_to_receive of this ForwardingOptions.  # noqa: E501
        :type: int
        """

        self._max_size_to_receive = max_size_to_receive

    @property
    def max_age_for_bulls(self):
        """Gets the max_age_for_bulls of this ForwardingOptions.  # noqa: E501


        :return: The max_age_for_bulls of this ForwardingOptions.  # noqa: E501
        :rtype: TimeSpan
        """
        return self._max_age_for_bulls

    @max_age_for_bulls.setter
    def max_age_for_bulls(self, max_age_for_bulls):
        """Sets the max_age_for_bulls of this ForwardingOptions.


        :param max_age_for_bulls: The max_age_for_bulls of this ForwardingOptions.  # noqa: E501
        :type: TimeSpan
        """

        self._max_age_for_bulls = max_age_for_bulls

    @property
    def warn_if_no_route_for_por_t(self):
        """Gets the warn_if_no_route_for_por_t of this ForwardingOptions.  # noqa: E501


        :return: The warn_if_no_route_for_por_t of this ForwardingOptions.  # noqa: E501
        :rtype: bool
        """
        return self._warn_if_no_route_for_por_t

    @warn_if_no_route_for_por_t.setter
    def warn_if_no_route_for_por_t(self, warn_if_no_route_for_por_t):
        """Sets the warn_if_no_route_for_por_t of this ForwardingOptions.


        :param warn_if_no_route_for_por_t: The warn_if_no_route_for_por_t of this ForwardingOptions.  # noqa: E501
        :type: bool
        """

        self._warn_if_no_route_for_por_t = warn_if_no_route_for_por_t

    @property
    def use_local_time(self):
        """Gets the use_local_time of this ForwardingOptions.  # noqa: E501


        :return: The use_local_time of this ForwardingOptions.  # noqa: E501
        :rtype: bool
        """
        return self._use_local_time

    @use_local_time.setter
    def use_local_time(self, use_local_time):
        """Sets the use_local_time of this ForwardingOptions.


        :param use_local_time: The use_local_time of this ForwardingOptions.  # noqa: E501
        :type: bool
        """

        self._use_local_time = use_local_time

    @property
    def send_p_messages_to_more_than_one_bbs(self):
        """Gets the send_p_messages_to_more_than_one_bbs of this ForwardingOptions.  # noqa: E501


        :return: The send_p_messages_to_more_than_one_bbs of this ForwardingOptions.  # noqa: E501
        :rtype: bool
        """
        return self._send_p_messages_to_more_than_one_bbs

    @send_p_messages_to_more_than_one_bbs.setter
    def send_p_messages_to_more_than_one_bbs(self, send_p_messages_to_more_than_one_bbs):
        """Sets the send_p_messages_to_more_than_one_bbs of this ForwardingOptions.


        :param send_p_messages_to_more_than_one_bbs: The send_p_messages_to_more_than_one_bbs of this ForwardingOptions.  # noqa: E501
        :type: bool
        """

        self._send_p_messages_to_more_than_one_bbs = send_p_messages_to_more_than_one_bbs

    @property
    def use4_char_continent_codes(self):
        """Gets the use4_char_continent_codes of this ForwardingOptions.  # noqa: E501


        :return: The use4_char_continent_codes of this ForwardingOptions.  # noqa: E501
        :rtype: bool
        """
        return self._use4_char_continent_codes

    @use4_char_continent_codes.setter
    def use4_char_continent_codes(self, use4_char_continent_codes):
        """Sets the use4_char_continent_codes of this ForwardingOptions.


        :param use4_char_continent_codes: The use4_char_continent_codes of this ForwardingOptions.  # noqa: E501
        :type: bool
        """

        self._use4_char_continent_codes = use4_char_continent_codes

    @property
    def aliases(self):
        """Gets the aliases of this ForwardingOptions.  # noqa: E501


        :return: The aliases of this ForwardingOptions.  # noqa: E501
        :rtype: list[str]
        """
        return self._aliases

    @aliases.setter
    def aliases(self, aliases):
        """Sets the aliases of this ForwardingOptions.


        :param aliases: The aliases of this ForwardingOptions.  # noqa: E501
        :type: list[str]
        """

        self._aliases = aliases

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ForwardingOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ForwardingOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
